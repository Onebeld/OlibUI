<OlibWindow xmlns="https://github.com/avaloniaui"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:vm="using:OlibUI.Sample.ViewModels"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
            x:Class="OlibUI.Sample.Views.MainWindow"
			WindowStartupLocation="CenterScreen"
			TransparencyLevelHint="AcrylicBlur"
			CompactMode="{Binding CompactMode}"
			FullScreenButton="{Binding ShowFullscreenButton}"
			EnableBlur="{Binding EnableBlur}"
			Background="Transparent"
			WindowButtons="All"
            Icon="/Assets/avalonia-logo.ico"
            Title="OlibUI.Sample">
	<OlibWindow.DataContext>
		<vm:MainWindowViewModel/>
	</OlibWindow.DataContext>
	<OlibWindow.Resources>
		<ColorToBrushConverter x:Key="ColorToBrushConverter" />
	</OlibWindow.Resources>
	<OlibWindow.TitleBarMenu>
		<Menu VerticalAlignment="Center" HorizontalAlignment="Left">
			<MenuItem Header="Windows">
				<MenuItem Header="Window with controls" Command="{Binding OpenWindowWithControls}"/>
			</MenuItem>
		</Menu>
	</OlibWindow.TitleBarMenu>

	<Grid RowDefinitions="*,Auto">
		<Border>
			<Grid RowDefinitions="*">
				<NavigationView CompactPaneLength="50" IsOpen="False" SelectedItem="{Binding #st}" Header="OlibUI.Sample" OpenPaneLength="250" HideTitle="True" ScrollViewer.VerticalScrollBarVisibility="Disabled">
					<NavigationViewItem Name="st" IsSelected="True" Header="Style" Icon="F1 M21.3,22z M0,0z M6.1,14.5A1,1,0,0,0,7.5,15.9A1,1,0,1,0,6.1,14.5z M6.1,6A1,1,0,0,0,7.5,7.4A1,1,0,0,0,6.1,6z M11,16A1,1,0,0,0,10,17A0.9,0.9,0,0,0,11,18A0.9,0.9,0,0,0,12,17A1,1,0,0,0,11.1,16z M5,10A1,1,0,0,0,4,11A0.9,0.9,0,0,0,5,12A0.9,0.9,0,0,0,6,11A1,1,0,0,0,5.1,10z M11,4A1,1,0,0,0,10,5A0.9,0.9,0,0,0,11,6A0.9,0.9,0,0,0,12,5A1,1,0,0,0,11.1,4z M14.5,6.1A1,1,0,0,0,14.5,7.5A1.1,1.1,0,0,0,16,7.5A1.2,1.2,0,0,0,16,6.1A1.2,1.2,0,0,0,14.5,6z M20.8,6.1A10.8,10.8,0,0,0,6.1,1.2A10.8,10.8,0,0,0,1.2,15.9A10.9,10.9,0,0,0,13,21.8A4.2,4.2,0,0,0,15.5,20.2A4.5,4.5,0,0,0,16.1,17A3.4,3.4,0,0,1,16,16A5.1,5.1,0,0,1,19,11.4A3.8,3.8,0,0,0,21.1,9.2A4.1,4.1,0,0,0,20.8,6.1z M19.1,8.5A1.6,1.6,0,0,1,18.1,9.6A6.9,6.9,0,0,0,14,16A6.6,6.6,0,0,0,14.1,17.4A1.6,1.6,0,0,1,13.8,19A1.5,1.5,0,0,1,12.6,19.8L11,20A9,9,0,0,1,2,11L2,10.7A9,9,0,0,1,10.5,2L11,2A9.1,9.1,0,0,1,19.1,7A2,2,0,0,1,19.1,8.5z M11,10A0.9,0.9,0,0,0,10,11A1,1,0,0,0,12,11A0.9,0.9,0,0,0,11,10z">
						<NavigationViewItem.Content>
							<Grid RowDefinitions="Auto,*" Margin="5">
								<DockPanel>
									<TextBlock Text="Theme:" />
									<ComboBox Margin="5 0 0 0" SelectedIndex="{Binding Theme}" MinHeight="18">
										<ComboBoxItem Content="{DynamicResource Dazzling}" />
										<ComboBoxItem Content="{DynamicResource Gloomy}" />
										<ComboBoxItem Content="{DynamicResource Mysterious}" />
										<ComboBoxItem Content="{DynamicResource Turquoise}" />
										<ComboBoxItem Content="{DynamicResource Emerald}" />
									</ComboBox>
								</DockPanel>

								<Grid Margin="0 5 0 0" Grid.Row="1" ColumnDefinitions="*,5,*" RowDefinitions="Auto,*,Auto">
									<ListBox Grid.RowSpan="2" Margin="0 0 0 5" Items="{Binding CustomThemes}" SelectedItem="{Binding CustomTheme}">
										<ListBox.DataTemplates>
											<DataTemplate>
												<TextBlock Margin="5 0 0 0" Text="{Binding Name}"/>
											</DataTemplate>
										</ListBox.DataTemplates>
										<ListBox.ContextMenu>
											<ContextMenu IsVisible="{Binding CustomTheme, Converter={x:Static ObjectConverters.IsNotNull}}">
												<MenuItem Header="Copy" Command="{Binding CopyTheme}"/>
												<MenuItem Header="Paste" Command="{Binding PasteTheme}"/>
											</ContextMenu>
										</ListBox.ContextMenu>
									</ListBox>
									<TextBox Grid.Row="0" Grid.Column="2" Watermark="Theme name" TextAlignment="Center" Text="{Binding CustomTheme.Name, Mode=TwoWay}" IsEnabled="{Binding CustomTheme, Converter={x:Static ObjectConverters.IsNotNull}}"/>
									<Border Grid.Row="1" Grid.Column="2" Grid.RowSpan="2" BorderThickness="1" CornerRadius="5" Classes="Panel" Margin="0 5 0 0">
										<ScrollViewer>
											<StackPanel Spacing="5" Margin="5 5 20 5" Name="Buttons" IsEnabled="{Binding CustomTheme, Converter={x:Static ObjectConverters.IsNotNull}}">
												<StackPanel.Styles>
													<Style Selector="Button">
														<Setter Property="ContextMenu">
															<Setter.Value>
																<ContextMenu>
																	<MenuItem Header="Copy" Command="{Binding CopyColor}"
																			  CommandParameter="{Binding $parent[Button]}"/>
																	<MenuItem Header="Paste" Command="{Binding PasteColor}"
																			  CommandParameter="{Binding $parent[Button]}"/>
																</ContextMenu>
															</Setter.Value>
														</Setter>
													</Style>
												</StackPanel.Styles>

												<DockPanel>
													<TextBlock Text="Accent" />
													<Button Width="30" Classes="SelectionColor"
															Background="{Binding CustomTheme.AccentColor, Converter={StaticResource ColorToBrushConverter}, Mode=TwoWay}"
															Command="{Binding ChangeColor}"
															CommandParameter="{Binding $self}"
															HorizontalAlignment="Right" />
												</DockPanel>
												<DockPanel>
													<TextBlock Text="Background" />
													<Button Width="30" Classes="SelectionColor"
															Background="{Binding CustomTheme.BackgroundColor, Converter={StaticResource ColorToBrushConverter}, Mode=TwoWay}"
															Command="{Binding ChangeColor}"
															CommandParameter="{Binding $self}"
															HorizontalAlignment="Right" />
												</DockPanel>
												<DockPanel>
													<TextBlock Text="Hover background" />
													<Button Width="30" Classes="SelectionColor"
															Background="{Binding CustomTheme.HoverBackgroundColor, Converter={StaticResource ColorToBrushConverter}, Mode=TwoWay}"
															Command="{Binding ChangeColor}"
															CommandParameter="{Binding $self}"
															HorizontalAlignment="Right" />
												</DockPanel>
												<DockPanel>
													<TextBlock Text="Foreground" />
													<Button Width="30" Classes="SelectionColor"
															Background="{Binding CustomTheme.ForegroundColor, Converter={StaticResource ColorToBrushConverter}, Mode=TwoWay}"
															Command="{Binding ChangeColor}"
															CommandParameter="{Binding $self}"
															HorizontalAlignment="Right" />
												</DockPanel>
												<DockPanel>
													<TextBlock Text="Foreground opacity" />
													<Button Width="30" Classes="SelectionColor"
															Background="{Binding CustomTheme.ForegroundOpacityColor, Converter={StaticResource ColorToBrushConverter}, Mode=TwoWay}"
															Command="{Binding ChangeColor}"
															CommandParameter="{Binding $self}"
															HorizontalAlignment="Right" />
												</DockPanel>
												<DockPanel>
													<TextBlock Text="Pressed foreground" />
													<Button Width="30" Classes="SelectionColor"
															Background="{Binding CustomTheme.PressedForegroundColor, Converter={StaticResource ColorToBrushConverter}, Mode=TwoWay}"
															Command="{Binding ChangeColor}"
															CommandParameter="{Binding $self}"
															HorizontalAlignment="Right" />
												</DockPanel>
												<DockPanel>
													<TextBlock Text="Border" />
													<Button Width="30" Classes="SelectionColor"
															Background="{Binding CustomTheme.BorderColor, Converter={StaticResource ColorToBrushConverter}, Mode=TwoWay}"
															Command="{Binding ChangeColor}"
															CommandParameter="{Binding $self}"
															HorizontalAlignment="Right" />
												</DockPanel>
												<DockPanel>
													<TextBlock Text="Border background" />
													<Button Width="30" Classes="SelectionColor"
															Background="{Binding CustomTheme.BorderBackgroundColor, Converter={StaticResource ColorToBrushConverter}, Mode=TwoWay}"
															Command="{Binding ChangeColor}"
															CommandParameter="{Binding $self}"
															HorizontalAlignment="Right" />
												</DockPanel>
												<DockPanel>
													<TextBlock Text="Window border" />
													<Button Width="30" Classes="SelectionColor"
															Background="{Binding CustomTheme.WindowBorderColor, Converter={StaticResource ColorToBrushConverter}, Mode=TwoWay}"
															Command="{Binding ChangeColor}"
															CommandParameter="{Binding $self}"
															HorizontalAlignment="Right" />
												</DockPanel>
												<DockPanel>
													<TextBlock Text="Not active window border" />
													<Button Width="30" Classes="SelectionColor"
															Background="{Binding CustomTheme.NotActiveWindowBorderColor, Converter={StaticResource ColorToBrushConverter}, Mode=TwoWay}"
															Command="{Binding ChangeColor}"
															CommandParameter="{Binding $self}"
															HorizontalAlignment="Right" />
												</DockPanel>
												<DockPanel>
													<TextBlock Text="ScrollBox" />
													<Button Width="30" Classes="SelectionColor"
															Background="{Binding CustomTheme.ScrollBoxColor, Converter={StaticResource ColorToBrushConverter}, Mode=TwoWay}"
															Command="{Binding ChangeColor}"
															CommandParameter="{Binding $self}"
															HorizontalAlignment="Right" />
												</DockPanel>
												<DockPanel>
													<TextBlock Text="Hover ScrollBox" />
													<Button Width="30" Classes="SelectionColor"
															Background="{Binding CustomTheme.HoverScrollBoxColor, Converter={StaticResource ColorToBrushConverter}, Mode=TwoWay}"
															Command="{Binding ChangeColor}"
															CommandParameter="{Binding $self}"
															HorizontalAlignment="Right" />
												</DockPanel>
												<DockPanel>
													<TextBlock Text="Error" />
													<Button Width="30" Classes="SelectionColor"
															Background="{Binding CustomTheme.ErrorColor, Converter={StaticResource ColorToBrushConverter}, Mode=TwoWay}"
															Command="{Binding ChangeColor}"
															CommandParameter="{Binding $self}"
															HorizontalAlignment="Right" />
												</DockPanel>
												<DockPanel>
													<TextBlock Text="Window border background" />
													<Button Width="30" Classes="SelectionColor"
															Background="{Binding CustomTheme.WindowBorderBackgroundColor, Converter={StaticResource ColorToBrushConverter}, Mode=TwoWay}"
															Command="{Binding ChangeColor}"
															CommandParameter="{Binding $self}"
															HorizontalAlignment="Right" />
												</DockPanel>
											</StackPanel>
										</ScrollViewer>
									</Border>

									<StackPanel Grid.Row="2" Grid.Column="0" Spacing="5">
										<Button Command="{Binding Delete}" Content="Delete" IsEnabled="{Binding CustomTheme, Converter={x:Static ObjectConverters.IsNotNull}}"/>
										<Button Command="{Binding Create}" Content="Create"/>
									</StackPanel>
								</Grid>
							</Grid>
						</NavigationViewItem.Content>
					</NavigationViewItem>
					
					<NavigationViewItem VerticalAlignment="Bottom" Header="About" Icon="{StaticResource QuestionIcon}">
						<NavigationViewItem.Content>
							<Grid Margin="5">
								<Path Fill="{DynamicResource ForegroundBrush}" Stretch="Uniform" Width="200" Margin="5" VerticalAlignment="Bottom" HorizontalAlignment="Right" Data="F1 M1633.9,193.3z M0,0z M633,39C646,39,657,42,666,47A51,51,0,0,1,687,70C692,79,694,91,694,104A83,83,0,0,1,690,130A57,57,0,0,1,679,151A52,52,0,0,1,659,164A71,71,0,0,1,633,169A69,69,0,0,1,607,164A52,52,0,0,1,588,150A55,55,0,0,1,576,130A85,85,0,0,1,572,104A79,79,0,0,1,576,77A55,55,0,0,1,588,57A53,53,0,0,1,607,44A68,68,0,0,1,633,39z M669,104C669,94 667,87 664,80 661,73 657,68 652,65A35,35,0,0,0,633,59A34,34,0,0,0,619,62A31,31,0,0,0,608,71A38,38,0,0,0,600,85A63,63,0,0,0,598,104A64,64,0,0,0,600,123A40,40,0,0,0,608,137A32,32,0,0,0,619,146A36,36,0,0,0,651,144Q659,139,664,129C667,122,669,114,669,104z M785,55L834,128 834,54C834,49,835,46,837,43A10,10,0,0,1,845,39A11,11,0,0,1,854,43C856,46,857,49,857,54L857,152C857,163,853,169,844,169A20,20,0,0,1,837,168A17,17,0,0,1,832,165A27,27,0,0,1,828,160L824,154 776,81 776,154Q776,161,773,165A12,12,0,0,1,756,165C754,162,753,159,753,154L753,58A28,28,0,0,1,754,48A15,15,0,0,1,767,39A14,14,0,0,1,773,41A17,17,0,0,1,778,44A30,30,0,0,1,781,48z M1004,61L947,61 947,92 999,92 1008,94A9,9,0,0,1,1011,101A9,9,0,0,1,1008,108Q1005,111,999,111L947,111 947,146 1005,146C1009,146,1012,147,1014,149A9,9,0,0,1,1017,157A9,9,0,0,1,1014,164Q1011,166,1005,166L937,166C931,166 927,165 925,163 923,161 921,156 921,151L921,57A21,21,0,0,1,923,48A11,11,0,0,1,928,43A22,22,0,0,1,937,42L1004,42C1008,42,1011,42,1013,44A9,9,0,0,1,1015,51A9,9,0,0,1,1012,58Q1010,61,1004,61z M1126,166L1088,166C1082,166 1078,165 1076,163 1074,161 1073,156 1073,151L1073,57C1073,52 1074,48 1076,45 1078,42 1083,42 1088,42L1128,42A87,87,0,0,1,1144,43A33,33,0,0,1,1156,47A33,33,0,0,1,1163,54A29,29,0,0,1,1169,63A29,29,0,0,1,1170,73C1170,85 1164,95 1152,100 1168,106 1176,116 1176,131A34,34,0,0,1,1171,150A32,32,0,0,1,1156,162A53,53,0,0,1,1143,166A145,145,0,0,1,1126,166z M1098,61L1098,93 1121,93 1136,91A14,14,0,0,0,1143,84A15,15,0,0,0,1146,76C1146,70 1143,66 1139,64 1135,62 1127,61 1118,61z M1124,111L1098,111 1098,147 1125,147C1142,147,1151,141,1151,129Q1151,120,1144,115C1140,112,1133,111,1124,111z M1317,61L1260,61 1260,92 1312,92 1321,94A10,10,0,0,1,1321,108Q1318,111,1312,111L1260,111 1260,146 1318,146C1322,146,1325,147,1327,149A10,10,0,0,1,1330,157A10,10,0,0,1,1327,164Q1324,166,1318,166L1250,166C1244,166 1240,165 1238,163 1236,161 1234,156 1234,151L1234,57A21,21,0,0,1,1236,48A11,11,0,0,1,1241,43A22,22,0,0,1,1250,42L1316,42C1320,42,1323,42,1325,44A9,9,0,0,1,1328,51A9,9,0,0,1,1325,58C1324,60,1321,61,1317,61z M1411,55L1411,146 1462,146C1466,146,1469,147,1471,149A10,10,0,0,1,1471,164L1462,166 1401,166C1395,166 1391,165 1389,163 1387,161 1385,156 1385,151L1385,55C1385,50,1386,46,1389,43A11,11,0,0,1,1398,39A12,12,0,0,1,1407,43C1409,46,1411,50,1411,55z M1543,42L1576,42A94,94,0,0,1,1598,44A41,41,0,0,1,1614,53Q1634,70,1634,104A93,93,0,0,1,1632,124A60,60,0,0,1,1626,141A52,52,0,0,1,1615,154A42,42,0,0,1,1604,161A48,48,0,0,1,1592,165A91,91,0,0,1,1576,166L1543,166C1539,166,1535,166,1533,164A10,10,0,0,1,1528,158A39,39,0,0,1,1527,149L1527,57C1527,52 1528,48 1531,45 1534,42 1537,42 1543,42z M1553,62L1553,146 1581,146A29,29,0,0,0,1589,144A21,21,0,0,0,1596,141C1604,133 1608,121 1608,104 1608,91 1606,82 1603,76 1600,70 1594,66 1589,64 1584,62 1577,62 1569,62z M516,157C515,154 497,111 450,75 260,-81 0,55 0,55L75,94 93,107C184,177 290,193 372,193 447,193 501,179 506,178L523,173z M305,140A36,36,0,1,1,342,104A36,36,0,0,1,305,140z M131,97A389,389,0,0,1,253,62A67,67,0,0,0,255,149C214,139,171,123,131,97z M341,161A67,67,0,0,0,372,104A67,67,0,0,0,360,66A191,191,0,0,1,479,152A592,592,0,0,1,341,161z"/>
							</Grid>
						</NavigationViewItem.Content>
					</NavigationViewItem>
				</NavigationView>

				<Popup Name="PopupNot"
					   PlacementTarget="{Binding #Not}"
					   Width="170"
					   MaxHeight="200"
					   PlacementMode="AnchorAndGravity"
					   PlacementAnchor="TopLeft"
					   PlacementGravity="Top"
				       StaysOpen="False"
				       MinHeight="50">
					<ScrollViewer>
						<StackPanel Spacing="5" Margin="5">
							<CheckBox Content="Compact mode" IsChecked="{Binding CompactMode}"/>
							<CheckBox Content="Show fullscreen button" IsChecked="{Binding ShowFullscreenButton}"/>
							<CheckBox Content="Enable blur" IsChecked="{Binding EnableBlur}"/>
							<CheckBox Content="Enable movable popup" IsChecked="{Binding EnableMovablePopup}"/>

							<Button Content="Show MessageBox" Command="{Binding ShowMessageBox}"/>
						</StackPanel>
					</ScrollViewer>
				</Popup>
			</Grid>
		</Border>

		<StatusBar Background="{DynamicResource WindowBorderBackgroundBrush}" BorderBrush="{DynamicResource WindowBorderBrush}" BorderThickness="0 1 0 0" Grid.Row="1" Height="23" VerticalAlignment="Bottom">
			<StatusBarItem VerticalAlignment="Center" Padding="3 0">
				<TextBlock Foreground="{DynamicResource ForegroundBrush}" Text="Ready"/>
			</StatusBarItem>

			<StatusBarItem HorizontalAlignment="Right" Padding="2 0">
				<ToggleButton Name="Not" Background="Transparent" Content="Settings" IsChecked="{Binding #PopupNot.IsOpen}" Padding="0" Margin="0 2" BorderThickness="0" ToolTip.Tip="Settings">
					<Path Data="F1 M19.6,20z M0,0z M18,10.7A1.2,1.2,0,0,1,18,9.3L19.3,7.9A0.9,0.9,0,0,0,19.4,6.7L17.4,3.3A0.9,0.9,0,0,0,16.4,2.8L14.5,3.2A1.1,1.1,0,0,1,13.3,2.5L12.7,0.7A1,1,0,0,0,11.8,0L7.8,0A1,1,0,0,0,6.8,0.7L6.2,2.5A0.9,0.9,0,0,1,5.1,3.2L3.1,2.8A0.9,0.9,0,0,0,2.1,3.3L0.0999999999999996,6.7A1.3,1.3,0,0,0,0.2,7.9L1.5,9.3A1.2,1.2,0,0,1,1.5,10.7L0.2,12.1A1.3,1.3,0,0,0,0.1,13.3L2.1,16.7A1.1,1.1,0,0,0,3.2,17.2L5.1,16.8A0.9,0.9,0,0,1,6.2,17.5L6.9,19.3A1,1,0,0,0,7.9,20L11.9,20A1,1,0,0,0,12.8,19.3L13.4,17.5A1.1,1.1,0,0,1,14.6,16.8L16.4,17.2A0.9,0.9,0,0,0,17.5,16.7L19.5,13.3A1,1,0,0,0,19.4,12.1z M16.6,12L17.4,12.9 16.1,15.1 14.9,14.9A3,3,0,0,0,11.4,16.9L11.1,18 8.5,18 8.1,16.9A2.9,2.9,0,0,0,4.7,14.9L3.5,15.1 2.2,12.9 3,12A3,3,0,0,0,3,8L2.2,7.1 3.5,4.9 4.7,5.1A2.9,2.9,0,0,0,8.1,3.1L8.5,2 11.1,2 11.4,3.1A3,3,0,0,0,14.9,5.1L16.1,4.9 17.4,7.1 16.6,8A2.8,2.8,0,0,0,16.6,12z M9.8,6A4,4,0,1,0,13.8,10A4,4,0,0,0,9.8,6z M9.8,12A2,2,0,1,1,11.8,10A2,2,0,0,1,9.8,12z" Stretch="Uniform" Margin="2"/>
				</ToggleButton>
			</StatusBarItem>
		</StatusBar>
	</Grid>
</OlibWindow>